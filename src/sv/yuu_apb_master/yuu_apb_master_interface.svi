/////////////////////////////////////////////////////////////////////////////////////
// Copyright 2019 seabeam@yahoo.com - Licensed under the Apache License, Version 2.0
// For more information, see LICENCE in the main folder
/////////////////////////////////////////////////////////////////////////////////////
`ifndef YUU_APB_MASTER_INTERFACE_SVI
`define YUU_APB_MASTER_INTERFACE_SVI

interface yuu_apb_master_interface();
  // AMBA2 APB Specification
  logic                             pclk;
  logic                             preset_n;
  logic [`YUU_APB_ADDR_WIDTH-1:0]   paddr;
  logic                             penable;
  logic                             pwrite;
  logic [`YUU_APB_DATA_WIDTH-1:0]   pwdata;
  logic [`YUU_APB_DATA_WIDTH-1:0]   prdata;
  logic                             psel;
  
  // AMBA3 APB Protocol Specification v1.0
  logic                             pready;
  logic                             pslverr;

  // AMBA APB Protocol Specification v2.0
  logic [2:0]                       pprot;
  logic [`YUU_APB_DATA_WIDTH/8-1:0] pstrb;

  clocking cb @(posedge pclk);
  endclocking

  clocking drv_cb @(posedge pclk);
    default input #`YUU_APB_MASTER_INPUT_TIME output #`YUU_APB_MASTER_OUTPUT_TIME;

    output  paddr;
    output  penable;
    output  pwrite;
    output  pwdata;
    output  psel;
    output  pstrb;
    output  pprot;

    input   prdata;
    input   pready;
    input   pslverr;
  endclocking

  clocking mon_cb @(posedge pclk);
    default input #`YUU_APB_MASTER_INPUT_TIME output #`YUU_APB_MASTER_OUTPUT_TIME;

    input   paddr;
    input   penable;
    input   pwrite;
    input   pwdata;
    input   psel;
    input   pstrb;
    input   pprot;

    input   prdata;
    input   pready;
    input   pslverr;
  endclocking

  modport drv_mp (
    output  paddr,
    output  penable,
    output  pwrite,
    output  pwdata,
    output  psel,
    output  pstrb,
    output  pprot,

    input   preset_n,
    input   prdata,
    input   pready,
    input   pslverr
  );

  modport mon_mp (
    input  preset_n,
    input  paddr,
    input  penable,
    input  pwrite,
    input  pwdata,
    input  psel,
    input  pstrb,
    input  pprot,

    input  prdata,
    input  pready,
    input  pslverr
  );

  task wait_cycle();
    @(posedge pclk);
  endtask
endinterface

`endif
